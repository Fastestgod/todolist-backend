{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yjiax\\\\Downloads\\\\todolist\\\\todolist-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n\n  // Fetch tasks from API\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/tasks');\n        setTasks(response.data);\n      } catch (error) {\n        console.error('There was an error fetching tasks!', error);\n      }\n    };\n    fetchTasks();\n  }, []);\n\n  // Create new task\n  const handleAddTask = async () => {\n    if (!newTask) return;\n    try {\n      const response = await axios.post('http://localhost:5000/api/tasks', {\n        title: newTask,\n        completed: false\n      });\n      setTasks([...tasks, response.data]);\n      setNewTask('');\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n\n  // Set task as complete\n  const handleCompleteTask = async id => {\n    try {\n      const response = await axios.put(`http://localhost:5000/api/tasks/${id}/complete`);\n      const updatedTasks = tasks.map(task => task._id === id ? response.data : task);\n      setTasks(updatedTasks);\n    } catch (error) {\n      console.error('Error marking task as complete:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTask,\n      onChange: e => setNewTask(e.target.value),\n      placeholder: \"Add a new task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task.title, \" \", task.completed ? '(Completed)' : '(Pending)', !task.completed && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCompleteTask(task._id),\n          children: \"Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)]\n      }, task._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"bPCx0+2jxyKSWrxqvYM6Q5jItg8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","newTask","setNewTask","fetchTasks","response","get","data","error","console","handleAddTask","post","title","completed","handleCompleteTask","id","put","updatedTasks","map","task","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/yjiax/Downloads/todolist/todolist-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState('');\r\n\r\n  // Fetch tasks from API\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/tasks');\r\n        setTasks(response.data);\r\n      } catch (error) {\r\n        console.error('There was an error fetching tasks!', error);\r\n      }\r\n    };\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  // Create new task\r\n  const handleAddTask = async () => {\r\n    if (!newTask) return;\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/tasks', {\r\n        title: newTask,\r\n        completed: false,\r\n      });\r\n      setTasks([...tasks, response.data]);\r\n      setNewTask('');\r\n    } catch (error) {\r\n      console.error('Error adding task:', error);\r\n    }\r\n  };\r\n\r\n  // Set task as complete\r\n  const handleCompleteTask = async (id) => {\r\n    try {\r\n      const response = await axios.put(`http://localhost:5000/api/tasks/${id}/complete`);\r\n      const updatedTasks = tasks.map((task) =>\r\n        task._id === id ? response.data : task\r\n      );\r\n      setTasks(updatedTasks);\r\n    } catch (error) {\r\n      console.error('Error marking task as complete:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>To-Do List</h1>\r\n      <input\r\n        type=\"text\"\r\n        value={newTask}\r\n        onChange={(e) => setNewTask(e.target.value)}\r\n        placeholder=\"Add a new task\"\r\n      />\r\n      <button onClick={handleAddTask}>Add Task</button>\r\n      <ul>\r\n        {tasks.map((task) => (\r\n          <li key={task._id}>\r\n            {task.title} {task.completed ? '(Completed)' : '(Pending)'}\r\n            {!task.completed && (\r\n              <button onClick={() => handleCompleteTask(task._id)}>Complete</button>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}