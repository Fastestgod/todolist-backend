{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yjiax\\\\Downloads\\\\todolist\\\\todolist-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n\n  // Fetch tasks from API\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/tasks');\n        setTasks(response.data);\n      } catch (error) {\n        console.error('There was an error fetching tasks!', error);\n      }\n    };\n    fetchTasks();\n  }, []);\n\n  // Create new task\n  const handleAddTask = async () => {\n    if (!newTask) return; // Don't add empty tasks\n    try {\n      const response = await axios.post('http://localhost:5000/api/tasks', {\n        title: newTask,\n        // Correct field as per the schema\n        completed: false // Default value for completed\n      });\n      setTasks([...tasks, response.data]);\n      setNewTask('');\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n\n  // Handle task completion toggle\n  const handleToggleComplete = async taskId => {\n    try {\n      const task = tasks.find(task => task._id === taskId);\n      const updatedTask = {\n        ...task,\n        completed: !task.completed\n      };\n      const response = await axios.put(`http://localhost:5000/api/tasks/${taskId}`, updatedTask);\n      setTasks(tasks.map(task => task._id === taskId ? response.data : task));\n    } catch (error) {\n      console.error('Error toggling task completion:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTask,\n      onChange: e => setNewTask(e.target.value),\n      placeholder: \"Add a new task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task.title, \" \", task.completed ? '(Completed)' : '(Pending)', /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleToggleComplete(task._id),\n          children: [\"Mark as \", task.completed ? 'Pending' : 'Completed']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, task._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"bPCx0+2jxyKSWrxqvYM6Q5jItg8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","newTask","setNewTask","fetchTasks","response","get","data","error","console","handleAddTask","post","title","completed","handleToggleComplete","taskId","task","find","_id","updatedTask","put","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/yjiax/Downloads/todolist/todolist-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState('');\r\n\r\n  // Fetch tasks from API\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/tasks');\r\n        setTasks(response.data);\r\n      } catch (error) {\r\n        console.error('There was an error fetching tasks!', error);\r\n      }\r\n    };\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  // Create new task\r\n  const handleAddTask = async () => {\r\n    if (!newTask) return;  // Don't add empty tasks\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/tasks', {\r\n        title: newTask,        // Correct field as per the schema\r\n        completed: false       // Default value for completed\r\n      });\r\n      setTasks([...tasks, response.data]);\r\n      setNewTask('');\r\n    } catch (error) {\r\n      console.error('Error adding task:', error);\r\n    }\r\n  };\r\n\r\n  // Handle task completion toggle\r\n  const handleToggleComplete = async (taskId) => {\r\n    try {\r\n      const task = tasks.find((task) => task._id === taskId);\r\n      const updatedTask = { ...task, completed: !task.completed };\r\n\r\n      const response = await axios.put(`http://localhost:5000/api/tasks/${taskId}`, updatedTask);\r\n      setTasks(tasks.map((task) => (task._id === taskId ? response.data : task)));\r\n    } catch (error) {\r\n      console.error('Error toggling task completion:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>To-Do List</h1>\r\n      <input\r\n        type=\"text\"\r\n        value={newTask}\r\n        onChange={(e) => setNewTask(e.target.value)}\r\n        placeholder=\"Add a new task\"\r\n      />\r\n      <button onClick={handleAddTask}>Add Task</button>\r\n      <ul>\r\n        {tasks.map((task) => (\r\n          <li key={task._id}>\r\n            {task.title} {task.completed ? '(Completed)' : '(Pending)'}\r\n            <button onClick={() => handleToggleComplete(task._id)}>\r\n              Mark as {task.completed ? 'Pending' : 'Completed'}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}